name: export-ecad

on:
  #runs on release
  release:
    types: [ published ]   

  #runs manually
  workflow_dispatch:   

env:
  repo: index-machines/index
  main_branch: master

jobs:
  export-pnp-ecad:
    runs-on: ubuntu-latest
    container: setsoft/kicad_auto:dev_k6
      
    steps:
    - name: Update system repositories, Install Required Libraries and Initialize git-lfs
      run: |
        apt update
        apt -y install git git-lfs zip librsvg2-bin imagemagick
        git lfs install

    - name: Checkout Repository
      uses: actions/checkout@v2
      with:
        lfs: true
        
    - name: Extract branch name
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: extract_branch            

    - name: Update the PCBs with on default branch with git hash
      if: github.event_name == 'release' || steps.extract_branch.outputs.branch == env.main_branch
      run: |
        export COMMIT=$(git rev-parse --short HEAD)
        echo "COMMIT = ${COMMIT}"    
        echo "ref: ${{ github.ref }}"
        echo "default: ${{ env.default }}"
        sed -i "s!<<hash>>!${COMMIT}!" pnp/pcb/mobo/mobo.kicad_pcb
        sed -i "s!<<hash>>!${COMMIT}!" pnp/pcb/ringLight/ringLight.kicad_pcb

    - name: Update the PCBs with the git hash and BETA.
      if: steps.extract_branch.outputs.branch != env.main_branch
      run: |
        export COMMIT=$(git rev-parse --short HEAD)
        echo "COMMIT = ${COMMIT}"
        sed -i "s!<<hash>>!BETA-${COMMIT}!" pnp/pcb/mobo/mobo.kicad_pcb
        sed -i "s!<<hash>>!BETA-${COMMIT}!" pnp/pcb/ringLight/ringLight.kicad_pcb


#mobo

    - name: Generate Mobo Export Files
      run: |
        cd pnp/pcb/mobo
        rm -rf export/
        kibot -c ../../../.github/workflows/config-4layer.kibot.yaml -e mobo.kicad_sch -b mobo.kicad_pcb -d export
        
    - name: Zip Mobo Export Files for Artifacts  
      run: |
        cd pnp/pcb/mobo/export/
        zip -r -j ../LumenPnP-PCBs-${{ github.sha }}.zip *

    - name: Zip Mobo Export Files for Release  
      run: |
        cd pnp/pcb/mobo/export/
        zip -r -j ../LumenPnP-PCBs-${{ github.event.release.tag_name }}.zip *

    - name: Upload Mobo Export Files as Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: LumenPnP-PCBs-${{ github.sha }}.zip
        path: pnp/pcb/mobo/export/LumenPnP-PCBs-${{ github.sha }}.zip
        if-no-files-found: error
        retention-days: 60

    - name: Upload Artifacts to Release
      uses: softprops/action-gh-release@v1
      if: github.event_name == 'release'
      with:
        files: |
          pnp/pcb/mobo/LumenPnP-PCBs-${{ github.event.release.tag_name }}.zip   


#ringlight

    - name: Run ringLight KiBot
      run: |
        cd pnp/pcb/ringLight 
        rm -rf export/     
        kibot -c ../../../config-2layer.kibot.yaml -e ringLight.kicad_sch -b ringLight.kicad_pcb -d export

    # Splitting this out to ensure a failed kibot run will mark a check as failed.
    - name: Compress ringLight Gerbers for PCB Fab
      run: |
        cd pnp/pcb/ringLight/export/gerbers
        zip -r -j ../pnp_ringLight_gerbers.zip *
        
    - name: Prepare Output Artifact
      if: github.event_name == 'release'    
      run: |
        cd pnp/pcb/ringLight/export/
        zip -r -j ../pnp_ringLight_files.zip *

    - name: upload ringLight results
      uses: actions/upload-artifact@v2
      with:
        name: pnp_ringLight_output
        path: pnp/pcb/ringLight/export

#datum


    - name: Run datum KiBot
      run: |
        cd pnp/pcb/datum 
        rm -rf export/     
        kibot -c ../../../config-2layer.kibot.yaml -e datum.kicad_sch -b datum.kicad_pcb -d export

    # Splitting this out to ensure a failed kibot run will mark a check as failed.
    - name: Compress datum Gerbers for PCB Fab
      run: |
        cd pnp/pcb/datum/export/gerbers
        zip -r -j ../pnp_datum_gerbers.zip *

    - name: Prepare Output Artifact
      if: github.event_name == 'release'    
      run: |
        cd pnp/pcb/datum/export/
        zip -r -j ../pnp_datum_files.zip *

    - name: upload datum results
      uses: actions/upload-artifact@v2
      with:
        name: pnp_datum_output
        path: pnp/pcb/datum/export


#upload to release


    - name: Upload Artifacts to Release
      uses: softprops/action-gh-release@v1
      if: github.event_name == 'release'
      with:
        files: |
          pnp/pcb/ringLight/pnp_ringLight_files.zip  
          pnp/pcb/datum/pnp_datum_files.zip       


#feeder


  export-feeder-ecad:
    runs-on: ubuntu-latest
    container: setsoft/kicad_auto:dev_k6
      
    steps:
    - name: Update system repositories
      run:  |
        apt update
        apt -y install git git-lfs zip librsvg2-bin imagemagick
        
    - name: Print Repo Info
      run: | 
        echo 'repo: ${{github.repository}}'

    - name: Checkout Repository
      uses: actions/checkout@v2
      with:
        lfs: true

    - name: Extract branch name
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: extract_branch            

    - name: Update the PCBs with the git hash
      if: github.event_name == 'release' || steps.extract_branch.outputs.branch == env.main_branch    
      run: |
        export COMMIT=$(git rev-parse --short HEAD)
        echo "COMMIT = ${COMMIT}"
        sed -i "s!<<hash>>!${COMMIT}!" feeder/pcb/mobo/mobo.kicad_pcb
        sed -i "s!<<hash>>!${COMMIT}!" feeder/pcb/feederFloor/feederFloor.kicad_pcb
        sed -i "s!<<hash>>!${COMMIT}!" feeder/pcb/indexingWheel/indexingWheel.kicad_pcb

    - name: Update the PCBs with the git hash and Beta
      if: steps.extract_branch.outputs.branch != env.main_branch    
      run: |
        export COMMIT=$(git rev-parse --short HEAD)
        echo "COMMIT = ${COMMIT}"
        sed -i "s!<<hash>>!BETA-${COMMIT}!" feeder/pcb/mobo/mobo.kicad_pcb
        sed -i "s!<<hash>>!BETA-${COMMIT}!" feeder/pcb/feederFloor/feederFloor.kicad_pcb
        sed -i "s!<<hash>>!BETA-${COMMIT}!" feeder/pcb/indexingWheel/indexingWheel.kicad_pcb        

    - name: Run feeder mobo KiBot
      run: cd feeder/pcb/mobo && kibot -c config.kibot.yaml -e mobo.kicad_sch -b mobo.kicad_pcb -d export

    - name: Compress feeder mobo Gerbers for PCB Fab
      run: cd feeder/pcb/mobo/export/gerbers && zip -r -j ../feeder_mobo_gerbers.zip * 
      
    - name: Prepare Output Artifact
      if: github.event_name == 'release'    
      run: |
        cd feeder/pcb/mobo/export/
        zip -r -j ../feeder_mobo_files.zip *      

    - name: upload mobo artifacts
      uses: actions/upload-artifact@v2
      with:
        name: feeder_mobo_output
        path: feeder/pcb/mobo/export        

    - name: Run indexingWheel KiBot
      run: cd feeder/pcb/indexingWheel && kibot -c ../../../config-blank.kibot.yaml -e indexingWheel.kicad_sch -b indexingWheel.kicad_pcb -d export

    - name: Compress indexingWheel Gerbers for PCB Fab
      run: cd feeder/pcb/indexingWheel/export/gerbers && zip -r -j ../feeder_indexingWheel_gerbers.zip *
      
    - name: Prepare Output Artifact
      if: github.event_name == 'release'    
      run: |
        cd feeder/pcb/indexingWheel/export/
        zip -r -j ../feeder_indexingWheel_files.zip *            

    - name: upload indexingWheel results
      uses: actions/upload-artifact@v2
      with:
        name: feeder_indexingWheel_output
        path: feeder/pcb/indexingWheel/export

    - name: Run feederFloor KiBot
      run: cd feeder/pcb/feederFloor && kibot -c ../../../config.kibot.yaml -e feederFloor.kicad_sch -b feederFloor.kicad_pcb -d export

    - name: Compress feederFloor Gerbers for PCB Fab
      run: cd feeder/pcb/feederFloor/export/gerbers && zip -r -j ../feeder_feederFloor_gerbers.zip *
      
    - name: Prepare Output Artifact
      if: github.event_name == 'release'    
      run: |
        cd feeder/pcb/feederFloor/export/
        zip -r -j ../feeder_feederFloor_files.zip *      

    - name: upload feederFloor results
      uses: actions/upload-artifact@v2
      with:
        name: feeder_feederFloor_output
        path: feeder/pcb/feederFloor/export

    - name: Upload Artifacts to Release
      uses: softprops/action-gh-release@v1
      if: github.event_name == 'release'
      with:
        files: |
          feeder/pcb/feederFloor/feeder_feederFloor_files.zip
          feeder/pcb/indexingWheel/feeder_indexingWheel_files.zip
          feeder/pcb/mobo/feeder_mobo_files.zip
     
